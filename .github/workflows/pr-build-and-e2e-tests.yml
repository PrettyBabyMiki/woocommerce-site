name: Build zip for PR
on: pull_request
jobs:
    build:
        name: Build zip for PR
        runs-on: ubuntu-latest
        steps:
            - name: Cancel Previous Runs
              uses: styfle/cancel-workflow-action@0.7.0
              with:
                  access_token: ${{ github.token }}

            - name: Checkout code
              uses: actions/checkout@v2

            - name: Build
              id: build
              uses: woocommerce/action-build@trunk
              env:
                  BUILD_ENV: e2e

            - name: Upload PR zip
              uses: actions/upload-artifact@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  name: woocommerce
                  path: ${{ steps.build.outputs.zip_path }}
                  retention-days: 7

    e2e-tests-run:
        name: Runs E2E tests.
        runs-on: ubuntu-18.04
        needs: [build]
        steps:
            - name: Create dirs.
              run: |
                  mkdir -p code/woocommerce
                  mkdir -p package/woocommerce
                  mkdir -p tmp/woocommerce
                  mkdir -p node_modules

            - name: Checkout code.
              uses: actions/checkout@v2
              with:
                  path: package/woocommerce

            - name: Install PNPM and install dependencies
              working-directory: package/woocommerce
              run: |
                  npm install -g pnpm
                  pnpm install

            - name: Load docker images and start containers.
              working-directory: package/woocommerce/plugins/woocommerce
              run: pnpx wc-e2e docker:up

            - name: Move current directory to code. We will install zip file in this dir later.
              run: mv ./package/woocommerce/plugins/woocommerce/* ./code/woocommerce

            - name: Download WooCommerce ZIP.
              uses: actions/download-artifact@v2
              with:
                  name: woocommerce
                  path: tmp

            - name: Extract and replace WooCommerce zip.
              working-directory: tmp
              run: |
                  unzip woocommerce.zip -d woocommerce
                  mv woocommerce/woocommerce/* ../package/woocommerce/plugins/woocommerce/

            - name: Install dependencies again
              working-directory: package/woocommerce
              run: |
                  npm install -g pnpm
                  pnpm install

            - name: Run tests command.
              working-directory: package/woocommerce/plugins/woocommerce
              env:
                  WC_E2E_SCREENSHOTS: 1
                  E2E_SLACK_TOKEN: ${{ secrets.E2E_SLACK_TOKEN }}
                  E2E_SLACK_CHANNEL: ${{ secrets.E2E_SLACK_CHANNEL }}
              run: pnpx wc-e2e test:e2e
                  
    api-tests-run:
        name: Runs API tests.
        runs-on: ubuntu-18.04
        needs: [build]
        steps:
            - name: Create dirs.
              run: |
                  mkdir -p code/woocommerce
                  mkdir -p package/woocommerce
                  mkdir -p tmp/woocommerce
                  mkdir -p node_modules

            - name: Checkout code.
              uses: actions/checkout@v2
              with:
                  path: package/woocommerce

            - name: Install PNPM and install dependencies
              working-directory: package/woocommerce
              run: |
                  npm install -g pnpm
                  pnpm install

            - name: Load docker images and start containers.
              working-directory: package/woocommerce/plugins/woocommerce
              run: pnpx wc-e2e docker:up

            - name: Move current directory to code. We will install zip file in this dir later.
              run: mv ./package/woocommerce/plugins/woocommerce/* ./code/woocommerce

            - name: Download WooCommerce ZIP.
              uses: actions/download-artifact@v2
              with:
                  name: woocommerce
                  path: tmp

            - name: Extract and replace WooCommerce zip.
              working-directory: tmp
              run: |
                  unzip woocommerce.zip -d woocommerce
                  mv woocommerce/woocommerce/* ../package/woocommerce/plugins/woocommerce/

            - name: Install dependencies again
              working-directory: package/woocommerce
              run: |
                  npm install -g pnpm
                  pnpm install

            - name: Run tests command.
              working-directory: package/woocommerce/plugins/woocommerce
              env:
                  BASE_URL: http://localhost:8084
                  USER_KEY: admin
                  USER_SECRET: password
              run: pnpx wc-api-tests test api

    k6-tests-run:
      name: Runs k6 Performance tests
      runs-on: ubuntu-18.04
      needs: [build]
      steps:
          - name: Create dirs.
            run: |
                mkdir -p code/woocommerce
                mkdir -p package/woocommerce
                mkdir -p tmp/woocommerce
                mkdir -p node_modules
          - name: Checkout code.
            uses: actions/checkout@v2
            with:
                path: package/woocommerce

          - name: Install PNPM and install dependencies
            working-directory: package/woocommerce
            run: |
                npm install -g pnpm
                pnpm install

          - name: Workaround to use initialization file with prepopulated data.
            working-directory: package/woocommerce/plugins/woocommerce/tests/e2e/docker
            run: |
                cp init-sample-products.sh initialize.sh

          - name: Load docker images and start containers.
            working-directory: package/woocommerce/plugins/woocommerce
            run: pnpx wc-e2e docker:up 

          - name: Move current directory to code. We will install zip file in this dir later.
            run: mv ./package/woocommerce/plugins/woocommerce/* ./code/woocommerce

          - name: Download WooCommerce ZIP.
            uses: actions/download-artifact@v2
            with:
                name: woocommerce
                path: tmp

          - name: Extract and replace WooCommerce zip.
            working-directory: tmp
            run: |
                unzip woocommerce.zip -d woocommerce
                mv woocommerce/woocommerce/* ../package/woocommerce/plugins/woocommerce/

          - name: Install dependencies again
            working-directory: package/woocommerce
            run: |
                npm install -g pnpm
                pnpm install

          - name: Wait for the Docker container to be built
            working-directory: package/woocommerce/plugins/woocommerce
            run: pnpx wc-e2e docker:wait

          - name: Install k6
            run: |
                curl https://github.com/grafana/k6/releases/download/v0.33.0/k6-v0.33.0-linux-amd64.tar.gz -L | tar xvz --strip-components 1
      
          - name: Run k6 tests
            run: |
              ./k6 run package/woocommerce/plugins/woocommerce/tests/performance/tests/gh-action-pr-requests.js
